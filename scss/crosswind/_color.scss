// TODO: put this in a function
$normalized_variant: ();
@each $key, $value in $variant {
	$key: '' + $key;
	$normalized_variant: map.set($normalized_variant, $key, $value);
	@if string.index($key, '_') != null {
		$hyphenated_key: replace($key, '_', '-');
		$normalized_variant: map.set($normalized_variant, $hyphenated_key, $value);
	}
}
$variant: $normalized_variant !global;


// Warn if color key is defined in variant that is not in the default
@each $variant_name, $variant_map in $variant {
	$default: map.get($variant, default);
	@each $color_key in map.keys($variant_map) {
		@if not map.has_key($default, $color_key) {
			@warn 'Color "#{$color_key}" in variant "#{$variant_name}" is not defined in default variant';
		}
	}
}


// Define raw colors and default variant colors
:root {
	@each $key, $value in $color {
		#{color_var($key)}: #{$value};
	}
	@each $key, $value in map.get($variant, default) {
		#{color_var($key)}: #{color('' + $value)};
	}
}


// Define all variant colors
@each $variant_name, $variant_map in $variant {
	.v-#{$variant_name} {
		@each $key, $value in $variant_map {
			#{color_var($key)}: #{color('' + $value)};
		}
	}
}
