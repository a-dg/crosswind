@use 'sass:map';
@use 'sass:meta';

@use '../config';

// @use 'function';
// @use 'util';

@use '../lib/breakbeat';

@use 'color';
@use 'variant';
@use 'grid'; // Needs Breakbeat when mixin called
@use 'typography'; // Needs Breakbeat but only when mixin parabolic is called

@forward 'color';
@forward 'variant';
@forward 'grid';
@forward 'typography';



// TODO: maybe this is where everything should be augmented, copied, and gathered into one place to be accessible throughout Crosswind


$_breakpoints: grid.create_breakpoints(
	config.$breakpoint_names,
	config.$breakpoint_width_min,
	config.$breakpoint_width_max,
	config.$breakpoint_scale_curve,
	config.$breakpoint_additions
);

// TODO: make all params optional
@include breakbeat.configure((
	breakpoints: $_breakpoints,
	output_em_queries: config.$output_em_queries,
	output_query_comments: config.$output_query_comments,
	// global_font_size: config.$global_font_size,
	// height_breakpoints_key: config.$height_breakpoints_key,
));






@include grid.gutter_settings(); // Needs Breakbeat
@include grid.set_max();
@include grid.set_gutter_flexible();
@include grid.set_gutter_by_type();


config.$colors: color.convert_raw_color_keys(config.$colors);
config.$variants: variant.convert_variant_keys(config.$variants);

@include color.check_variant_keys();

$_transparent_colors: color.create_transparent_variant_colors();
// $global_colors: map.get($_transparent_colors, colors);
config.$colors: map.deep_merge(config.$colors, map.get($_transparent_colors, colors));
// $global_variants: map.get($_transparent_colors, variants);
config.$variants: map.deep_merge(config.$variants, map.get($_transparent_colors, variants));

@include color.define_color_variables();
@include color.define_variant_classes();


@include typography.parabolic_font_sizes(config.$all_font_sizes);
// @include parabolic_font_sizes($all_line_heights, 'line-height');
// @debug closest_font_size($all_font_sizes, 32px);
