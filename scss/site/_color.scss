$color_warning: #f09;

$color_white: #fff;
$color_fog: #eee;
$color_smoke: #ddd;
$color_cement: #ccc;
$color_gray: #666;
$color_black: #000;

$color_purple: #90f;
$color_blue: #09f;
$color_pink: #f09;
$color_mint: #5ec;


@import '../crosswind/function';


$color_prefix: color;

$color: (
	white: #fff,
	fog: #eee,
	smoke: #ddd,
	cement: #ccc,
	gray: #666,
	black: #000,
	purple: #90f,
	blue: #09f,
	pink: #f09,
	mint: #5ec,
);

// TODO: Currently, if a variant name contains underscores, a duplicate variant
// is created that uses hyphens. This is so we can define nice, clean variant
// names using underscores, but can still use the hyphenated version when using
// them in class names. Example: "extra_dark" becomes ".v-extra-dark", as well
// as ".v-extra_dark". Is this necessary? Is this the right approach? This same
// logic *does not* apply to color keys within variants. "button_bg" will
// always be referenced as "color(button_bg)".
$variant: (
	default: (
		bg: white,
		header: blue,
		text: gray,
		button_bg: pink,
		button_text: black,
	),
	light: (
		bg: fog,
		header: cement,
		button_bg: cement,
		button_text: white,
	),
	dark: (
		bg: black,
		header: gray,
		text: white,
		button_bg: purple,
		button_text: white,
	),
	loud: (
		bg: blue,
		header: purple,
		text: pink,
		button_bg: mint,
	),
	pink: (
		bg: pink,
		header: white,
		text: white,
		button_bg: white,
		button_text: pink,
	),
	extra_dark: (
		bg: black,
		header: gray,
		button_bg: gray,
	),
);


[class*=" v-"],
[class^="v-"],
[cw-v] {
	background: color(bg);
}
