// Usage: const(STATE_NAV_MOBILE_WIDE)
$constants: (
	STATE_NAV_MOBILE: 'mobile nav',
	STATE_NAV_MOBILE_WIDE: 'wide mobile nav',
	STATE_NAV_DESKTOP: 'desktop nav',
	STATE_NAV_DESKTOP_WIDE: 'wide desktop nav',
	FONT_SANS_BOLD: 'sans bold',
	FONT_SANS_BOLD_UPPER: 'sans bold upper',
	FONT_SANS_LIGHT_UPPER: 'sans light upper',
);


// TODO: define nav states, or layout states in general
// $nav_states: (
// 	zo: STATE_NAV_MOBILE,
// 	md: STATE_NAV_MOBILE_WIDE,
// 	av: STATE_NAV_DESKTOP,
// 	lg: STATE_NAV_DESKTOP_WIDE,
// );
// TODO: for any values that are access through a function and not meant to be accessed directly (constants, colors, variants), they can be specified in maps like this using just their key, excluding the accessor function

// TODO: create a b() alias within Crosswind that points to Breakbeat, but allows for some additional functionality, such as checking if the breakpoint param exists as a key in $constants, then cross-referencing that in the breakpoint states map to get the actual breakpoint name. This is basically the same as creating semantic breakpoint variables, but as constants.

// @include b($bp_desktop_nav) {
// 	// Styles for desktop nav
// }

// TODO: we need constants!
// @include state($nav_states, 'mobile nav');


/*

// TODO: or possibly define "modes" with each breakpoint
// TODO: what are some possible modes or states that would warrant this type
// of approach, aside from main navigation changes?
$breakpoint_modes: (
	zo: 'mobile nav',
	md: (
		'wide mobile nav',
		'staff photos large',
	),
	av: 'narrow desktop nav',
	lg: (
		'desktop nav',
		'staff photos huge',
	),
);

// Or:
$breakpoint_modes: (
	'mobile nav': zo,
	'wide mobile nav': md,
	'narrow desktop nav': av,
	'desktop nav': lg,
	
	'staff photos large': md,
	'staff photos huge': lg,
);

*/
